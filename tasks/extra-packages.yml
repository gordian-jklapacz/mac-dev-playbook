---
- name: Install global Composer packages.
  composer:
    command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
    arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
    # Ansible 2.4 supports `global_command` making `working_dir` optional.
    working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
  loop: "{{ composer_packages }}"

- name: Install global NPM packages.
  npm:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    global: true
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ npm_packages }}"

- name: Install global Pip packages.
  pip:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default('pip3') }}"
  loop: "{{ pip_packages }}"

- name: Install global Ruby gems.
  gem:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    user_install: false
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ gem_packages }}"

- name: get go path
  raw: go env | grep GOPATH | sed 's/GOPATH=//g' | sed 's/"//g'
  register: go_path

- set_fact:
    go_directory: "{{ go_path.stdout | trim }}"

- name: Install go binaries
  command:
    cmd: go install {{ item.module | default(item) }}
    creates: "{{ go_directory }}/bin/{{ item.bin | default(item) }}"
  loop: "{{ go_packages }}"

- name: Install pipx programs
  community.general.pipx:
    name: "{{ item }}"
    executable: "{{ pyenv_root }}/versions/3.9.11/bin/pipx"
  loop: "{{ pipx_packages }}"
